// <auto-generated />
using System;
using FootballLeague.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootballLeague.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211214134905_MatchesAndTeamsRowsAdded")]
    partial class MatchesAndTeamsRowsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FootballLeague.DataAccess.Data.Models.Match<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HostingTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HostingTeamScore")
                        .HasColumnType("int");

                    b.Property<bool>("IsPlayed")
                        .HasColumnType("bit");

                    b.Property<Guid>("VisitingTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VisitingTeamScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostingTeamId");

                    b.HasIndex("VisitingTeamId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FootballLeague.DataAccess.Data.Models.Team<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TeamScore")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FootballLeague.DataAccess.Data.Models.Match<System.Guid>", b =>
                {
                    b.HasOne("FootballLeague.DataAccess.Data.Models.Team<System.Guid>", "HostingTeam")
                        .WithMany("HostedMatches")
                        .HasForeignKey("HostingTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FootballLeague.DataAccess.Data.Models.Team<System.Guid>", "VisitingTeam")
                        .WithMany("VisitedMatches")
                        .HasForeignKey("VisitingTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HostingTeam");

                    b.Navigation("VisitingTeam");
                });

            modelBuilder.Entity("FootballLeague.DataAccess.Data.Models.Team<System.Guid>", b =>
                {
                    b.Navigation("HostedMatches");

                    b.Navigation("VisitedMatches");
                });
#pragma warning restore 612, 618
        }
    }
}
